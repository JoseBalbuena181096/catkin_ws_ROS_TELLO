/**
 * @mainpage libARNetworkAL Documentation
 *
 * @section AL_intro_sec Introduction
 *
 * The ARNetworkAL library is an abstraction layer interface over different
 * types of networks (wifi, bluetooth ...)
 *
 * @section AL_api_sec API
 *
 * An @ref ARNETWORKAL_Manager_t object is created using
 * @ref ARNETWORKAL_Manager_New, then initialized using one of the
 * ARNETWORKAL_Manager_InitXXXXNetwork functions
 * (@ref ARNETWORKAL_Manager_InitWifiNetwork,
 * @ref ARNETWORKAL_Manager_InitBLENetwork).
 *
 * The typical use of an @ref ARNETWORKAL_Manager_t object is to pass it to
 * ARNETWORK_Manager_New, to create a working network manager.
 * @see <a href="../../libARNetwork/html/index.html" target="_blank">ARNetwork Documentation</a>
 *
 * When no longer used, the connection is closed using one of the
 * ARNETWORKAL_Manager_CloseXXXXNetwork functions
 * (@ref ARNETWORKAL_Manager_CloseWifiNetwork,
 * @ref ARNETWORKAL_Manager_CloseBLENetwork)
 *
 * The @ref ARNETWORKAL_Manager_t object can then be freed using
 * @ref ARNETWORKAL_Manager_Delete.
 *
 * @subsection AL_details_subsec API Details (When not using ARNetwork library)
 *
 * An @ref ARNETWORKAL_Manager_t object, when properly initialized, provides
 * 4 different functions to abstract the undelying network.
 *
 * These four functions are specific to every @ref ARNETWORKAL_Manager_t, and
 * are called using function pointers of the structure.
 *
 * @subsubsection AL_sending_subsubsec Sending data
 *
 * @ref ARNETWORKAL_Manager_PushFrame_t function is called every
 * time the application wants to add an @ref ARNETWORKAL_Frame_t to the send
 * queue. On certain networks, this function might also trigger the actual
 * send.
 *
 * @ref ARNETWORKAL_Manager_Send_t function is called by the
 * application when it wants the send queue to be sent on the network. On
 * certain networks, this function is a no-op.
 *
 * @subsubsection AL_receiving_subsubsec Receiving data
 *
 * @ref ARNETWORKAL_Manager_Receive_t function triggers a network
 * read. This is typically a blocking (with timeout) function which will clock
 * the calls to the following callback.
 *
 * @ref ARNETWORKAL_Manager_PopFrame_t function reads one
 * available @ref ARNETWORKAL_Frame_t from the @ref ARNETWORKAL_Manager_t
 * reading buffer. This function can be called in a loop until it returns
 * @ref ARNETWORKAL_MANAGER_RETURN_BUFFER_EMPTY
 *
 * @section AL_support_sec Supported network types
 *
 * The library currently support two types of networks:
 *
 * Wifi Network: While named after Wifi (its most frequent use case), this
 * network type works on any UDP/IP network (Ethernet, WWAN ...). This type
 * is available on all implementations of ARNetworkAL
 *
 * BLE Network: BLE Network type is not available on all platforms (currently
 * only available on iOS and Android over 4.3). It uses Bluetooth 4.0 (Bluetooth Low Energy), which
 * is used on some ARSDK products
 */
